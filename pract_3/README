File name: pract3.py

================
External Library
================
rdkit 2020.03.3.0
numpy 1.16.4
pandas 0.24.2
scipy 1.3.0

========
Function
========
pract3.py is a program that will accept two SDF files of
a single reference molecule and a list of molecules as
inputs.

1. The program can display the similarity between the
molecules in the list and  the reference molecule. The
output dataframe is sorted by similarity, and the index
indicates the molecule's position in the original list.

FIVE different similarity algorithms are natively supported,
which are Normalized Euclidean Similarity, Normalized Manhattan
Similarity and Distance Weighted Cosine Similarity based on
Ultrafast Shape Recognition(USR), and Tanimoto and Dice
Similarity based on Morgan Fingerprints generated by rdkit.

2. The program can output a single molecular graph according
to user's command. This function aims to help user get
visualized molecules and make judgement especailly when
different algorithms give different similarity ranks.

=====
USAGE
=====

----------------------
Similarity Calculation
----------------------

python pract3.py input_1 input_2 algorithm

[algorithm list]:

        usre - USR-based Normalized Euclidean
        usrm - USR-based Normalized Manhattan
        usrc - USR-based Distance Weighted Cosine
        tanimoto - Morgan-based tanimoto
        dice - Morgan-based dice

[example] python pract3.py input_1 input_2 usre
          python pract3.py input_1 input_2 tanimoto

--------------
Molecule Graph
--------------

python pract3.py input_1 input_2 plt-

[Explanation]

       To draw reference molecule, do like
       ->> python pract3.py input_1 input_2 plt-refmol

       To draw molecules in the list, put its indice after 'plt-'
       ->> python pract3.py input_1 input_2 plt-1

       The command above will plot the molecule 1 in the list

***input_1 is your reference molecule SDF
***input_2 is your molecule list SDF

====
Note
====
1. Euclidean distance normalization
-> Similarity = 1 / (1 + Euclidean Distance)

2. Manhattan distance normalization
-> Similarity = 1 / (1 + Manhattan Distance)

3. Distance weighted cosine similarity
-> Similarity = Cosine / (Cosine + Distance^2)

4. Tanimoto and Dice similarities all calculated by rdkit
based on Morgan Fingerprints.

==========
Limitation
==========
1.Different algorithms are likely to give different similarity
ranking, user should decide the suitable algorithm.

2.If you draw molecules on a server, be patient to wait for the
pop-out window (about 10 sec waiting time).

=========
Reference
=========
For Ultrafast Shape Recognition, see

->> Ballester, Pedro J., and W. Graham Richards.
 "Ultrafast shape recognition to search compound
 databases for similar molecular shapes." Journal
 of computational chemistry 28.10 (2007): 1711-1723.
